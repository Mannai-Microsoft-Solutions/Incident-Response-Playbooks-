{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "Sentinel-To-SMax-Sync",
            "type":  "string"
        },
        "SMaxBaseUrl":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for SMaxBaseUrl"
            }
        },
        "SMaxPassword":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for SMaxPassword"
            }
        },
        "SMaxTenantId":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for SMaxTenantId"
            }
        },
        "SMaxUserId":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for SMaxUserId"
            }
        }
    },
    "variables":  {
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        },
                        "SMaxBaseUrl":  {
                            "defaultValue":  "[parameters('SMaxBaseUrl')]",
                            "type":  "string"
                        },
                        "SMaxPassword":  {
                            "defaultValue":  "[parameters('SMaxPassword')]",
                            "type":  "string"
                        },
                        "SMaxTenantId":  {
                            "defaultValue":  "[parameters('SMaxTenantId')]",
                            "type":  "string"
                        },
                        "SMaxUserId":  {
                            "defaultValue":  "[parameters('SMaxUserId')]",
                            "type":  "string"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Check_Incident_already_present_or_not":  {
                            "actions":  {
                                "Condition_-_Check_SMAX_ticket_creation_status":  {
                                    "actions":  {
                                        "For_each":  {
                                            "foreach":  "@body('Parse_JSON_-_SMAX_ticket_Creation')?['entity_result_list']",
                                            "actions":  {
                                                "Add_comment_to_incident_(V3)":  {
                                                    "runAfter":  {
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "body":  {
                                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                            "message":  "\u003cp\u003eSMAX Ticket Id : \u0026nbsp;@{items('For_each')?['entity']?['properties']?['Id']}\u003c/p\u003e"
                                                        },
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "post",
                                                        "path":  "/Incidents/Comment"
                                                    }
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "type":  "Foreach"
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_JSON_-_SMAX_ticket_Creation":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "equals":  [
                                                    "@body('Parse_JSON_-_SMAX_ticket_Creation')?['meta']?['completion_status']",
                                                    "OK"
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                },
                                "CreateSMaxTicket":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "body":  {
                                            "entities":  [
                                                {
                                                    "entity_type":  "Incident",
                                                    "properties":  {
                                                        "ArmId_c":  "@{triggerBody()?['object']?['id']}",
                                                        "Category":  "14656",
                                                        "Description":  "@{triggerBody()?['object']?['properties']?['description']}",
                                                        "DisplayLabel":  "@{triggerBody()?['object']?['properties']?['title']}",
                                                        "EntityModel":  "16317",
                                                        "ExternalProcessReference":  "@{triggerBody()?['object']?['name']}",
                                                        "ImpactScope":  "@{variables('ImpactScope')}",
                                                        "IncidentUrl_c":  "@{triggerBody()?['object']?['properties']?['incidentUrl']}",
                                                        "RegisteredForActualService":  "16432",
                                                        "RequestedByPerson":  "16435",
                                                        "ResourceGroup_c":  "@{triggerBody()?['workspaceInfo']?['ResourceGroupName']}",
                                                        "Status":  "Ready",
                                                        "SubscriptionID_c":  "@{triggerBody()?['workspaceInfo']?['SubscriptionId']}",
                                                        "TenantID_c":  "",
                                                        "Urgency":  "@{variables('Urgency')}",
                                                        "WorkspaceID_c":  "@{triggerBody()?['workspaceInfo']?['WorkspaceName']}"
                                                    }
                                                }
                                            ],
                                            "operation":  "CREATE"
                                        },
                                        "cookie":  "LWSSO_COOKIE_KEY=@{body('GetSMaxToken')}",
                                        "headers":  {
                                            "Content-Type":  "application/json"
                                        },
                                        "method":  "POST",
                                        "uri":  "https://msitsm.mannai.com.qa/rest/@{parameters('SMaxTenantId')}/ems/bulk"
                                    }
                                },
                                "Parse_JSON_-_SMAX_ticket_Creation":  {
                                    "runAfter":  {
                                        "CreateSMaxTicket":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('CreateSMaxTicket')",
                                        "schema":  {
                                            "properties":  {
                                                "entity_result_list":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "completion_status":  {
                                                                "type":  "string"
                                                            },
                                                            "entity":  {
                                                                "properties":  {
                                                                    "entity_type":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "properties":  {
                                                                        "properties":  {
                                                                            "Id":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "LastUpdateTime":  {
                                                                                "type":  "integer"
                                                                            }
                                                                        },
                                                                        "type":  "object"
                                                                    },
                                                                    "related_properties":  {
                                                                        "properties":  {
                                                                        },
                                                                        "type":  "object"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            }
                                                        },
                                                        "required":  [
                                                            "entity",
                                                            "completion_status"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                },
                                                "meta":  {
                                                    "properties":  {
                                                        "completion_status":  {
                                                            "type":  "string"
                                                        }
                                                    },
                                                    "type":  "object"
                                                },
                                                "relationship_result_list":  {
                                                    "type":  "array"
                                                },
                                                "translation_result_list":  {
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Parse_JSON_-_Get_incident":  [
                                    "Succeeded"
                                ]
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "equals":  [
                                            "@body('Parse_JSON_-_Get_incident')?['meta']?['total_count']",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "GetSMaxToken":  {
                            "runAfter":  {
                                "Switch_-_Set_Severity":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Http",
                            "inputs":  {
                                "body":  {
                                    "Login":  "@{parameters('SMaxUserId')}",
                                    "Password":  "@{parameters('SMaxPassword')}"
                                },
                                "headers":  {
                                    "Content-Length":  "57",
                                    "Content-Type":  "application/json",
                                    "Host":  "msitsm.mannai.com.qa",
                                    "accept":  "*/*"
                                },
                                "method":  "POST",
                                "uri":  "@{parameters('SMaxBaseUrl')}@{parameters('SMaxTenantId')}"
                            },
                            "operationOptions":  "DisableAsyncPattern"
                        },
                        "Get_SMAX_Ticket":  {
                            "runAfter":  {
                                "GetSMaxToken":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Http",
                            "inputs":  {
                                "cookie":  "LWSSO_COOKIE_KEY=@{body('GetSMaxToken')}",
                                "headers":  {
                                    "Content-Type":  "application/json"
                                },
                                "method":  "GET",
                                "uri":  "https://msitsm.mannai.com.qa:443/rest/@{parameters('SMaxTenantId')}/ems/Incident?filter=WorkspaceID_c+%3D+'@{triggerBody()?['workspaceInfo']?['WorkspaceName']}'+and+ExternalProcessReference+%3D+'@{triggerBody()?['object']?['properties']?['incidentNumber']}'\u0026layout=Id,Priority,DisplayLabel,PhaseId,Status,ServiceDeskGroup,RegisteredForActualService,SLT.TargetDate,ProcessId,SLT.SLATargetDate,SLT.OLATargetDate,ServiceDeskGroup.Name,ServiceDeskGroup.IsDeleted,RegisteredForActualService.DisplayLabel,RegisteredForActualService.SubType,RegisteredForActualService.IsDeleted,OwnedByPerson,OwnedByPerson.Name,OwnedByPerson.Email,Description,CompletionCode,Urgency,RequestedByPerson,ExternalProcessReference,EntityModel,IncidentUrl_c,ResourceGroup_c,SubscriptionID_c,WorkspaceID_c,ExternalProcessReference,Category"
                            }
                        },
                        "Initialize_variable_-ImpactScope":  {
                            "runAfter":  {
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "ImpactScope",
                                        "type":  "string",
                                        "value":  "SingleUser"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Classification":  {
                            "runAfter":  {
                                "Initialize_variable_-_Status":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Classification",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_ClassificationReason":  {
                            "runAfter":  {
                                "Initialize_variable_-_Classification":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "ClassificationReason",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Status":  {
                            "runAfter":  {
                                "Initialize_variable_-_Urgency":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Status",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Urgency":  {
                            "runAfter":  {
                                "Initialize_variable_-ImpactScope":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Urgency",
                                        "type":  "string",
                                        "value":  "NoDisruption"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON_-_Get_incident":  {
                            "runAfter":  {
                                "Get_SMAX_Ticket":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('Get_SMAX_Ticket')",
                                "schema":  {
                                    "properties":  {
                                        "entities":  {
                                            "items":  {
                                                "properties":  {
                                                    "entity_type":  {
                                                        "type":  "string"
                                                    },
                                                    "properties":  {
                                                        "properties":  {
                                                            "Description":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "DisplayLabel":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "EntityModel":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "ExternalProcessReference":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "Id":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "IncidentUrl_c":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "LastUpdateTime":  {
                                                                "type":  "integer"
                                                            },
                                                            "PhaseId":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "Priority":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "ProcessId":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "RegisteredForActualService":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "RequestedByPerson":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "ResourceGroup_c":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "ServiceDeskGroup":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "Status":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "SubscriptionID_c":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "Urgency":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "WorkspaceID_c":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            }
                                                        },
                                                        "type":  "object"
                                                    },
                                                    "related_properties":  {
                                                        "properties":  {
                                                            "RegisteredForActualService":  {
                                                                "properties":  {
                                                                    "DisplayLabel":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "IsDeleted":  {
                                                                        "type":  "boolean"
                                                                    },
                                                                    "SubType":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            },
                                                            "SLT":  {
                                                                "properties":  {
                                                                    "SLATargetDate":  {
                                                                        "type":  "integer"
                                                                    },
                                                                    "TargetDate":  {
                                                                        "type":  "integer"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            },
                                                            "ServiceDeskGroup":  {
                                                                "properties":  {
                                                                    "IsDeleted":  {
                                                                        "type":  "boolean"
                                                                    },
                                                                    "Name":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            }
                                                        },
                                                        "type":  "object"
                                                    }
                                                },
                                                "required":  [
                                                    "entity_type",
                                                    "properties",
                                                    "related_properties"
                                                ],
                                                "type":  "object"
                                            },
                                            "type":  "array"
                                        },
                                        "meta":  {
                                            "properties":  {
                                                "completion_status":  {
                                                    "type":  "string"
                                                },
                                                "errorDetailsList":  {
                                                    "type":  "array"
                                                },
                                                "errorDetailsMetaList":  {
                                                    "type":  "array"
                                                },
                                                "query_time":  {
                                                    "type":  "integer"
                                                },
                                                "total_count":  {
                                                    "type":  "integer"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        },
                        "Switch_-_Set_Severity":  {
                            "runAfter":  {
                                "Initialize_variable_-_ClassificationReason":  [
                                    "Succeeded"
                                ]
                            },
                            "cases":  {
                                "Case_-_High":  {
                                    "case":  "High",
                                    "actions":  {
                                        "Set_-ImpactScope_-_High":  {
                                            "runAfter":  {
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "ImpactScope",
                                                "value":  "Enterprise"
                                            }
                                        },
                                        "Set_Urgency_-_High":  {
                                            "runAfter":  {
                                                "Set_-ImpactScope_-_High":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Urgency",
                                                "value":  "TotalLossOfService"
                                            }
                                        }
                                    }
                                },
                                "Case_-_Low":  {
                                    "case":  "Low",
                                    "actions":  {
                                        "Set_-ImpactScope_-_Low":  {
                                            "runAfter":  {
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "ImpactScope",
                                                "value":  "MultipleUsers"
                                            }
                                        },
                                        "Set_Urgency_-_Low":  {
                                            "runAfter":  {
                                                "Set_-ImpactScope_-_Low":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Urgency",
                                                "value":  "SlightDisruption"
                                            }
                                        }
                                    }
                                },
                                "Case_-_Medium":  {
                                    "case":  "Medium",
                                    "actions":  {
                                        "Set_-ImpactScope_-_Medium":  {
                                            "runAfter":  {
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "ImpactScope",
                                                "value":  "SiteOrDepartment"
                                            }
                                        },
                                        "Set_Urgency_-_Medium":  {
                                            "runAfter":  {
                                                "Set_-ImpactScope_-_Medium":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Urgency",
                                                "value":  "SevereDisruption"
                                            }
                                        }
                                    }
                                }
                            },
                            "default":  {
                                "actions":  {
                                }
                            },
                            "expression":  "@triggerBody()?['object']?['properties']?['severity']",
                            "type":  "Switch"
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "Sentinel-To-SMax-Sync",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        }
    ]
}
